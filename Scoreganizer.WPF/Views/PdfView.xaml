<views:MvxWpfView
    x:Class="Lomont.Scoreganizer.WPF.Views.PdfView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views1="clr-namespace:Lomont.Scoreganizer.WPF.Views"
    xmlns:views2="clr-namespace:Lomont.Scoreganizer.WPF.Views"
    mc:Ignorable="d"
    d:DesignHeight="800" d:DesignWidth="700">
    <!--<views:MvxWpfView.Resources>
        --><!--<views1:BitmapConverter x:Key="BitmapConverter"/>--><!--
    </views:MvxWpfView.Resources>-->

    <views:MvxWpfView.Resources>
        <!-- 
        todo - move these to app wide
        -->



        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <views1:DurationConverter x:Key="DurationConverter"/>


    </views:MvxWpfView.Resources>

    <DockPanel Background="Black">
        <DockPanel.Resources>
            <views1:BitmapConverter x:Key="BitmapConverter"/>
        </DockPanel.Resources>
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--<Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </Style>
            </Grid.Resources>-->

            <!--
            needs (Font Awesome symbol)
            1. Back to prev screen (Chevron Circle)
            2. draw: invert, filter, colorize (pencil-ruler)
            * 3. Current page and page selection (sticky-note)
            * 4. quick page 1 (backward)
            * 5. select media if present: none, file, shows media player (file-audio)
            6. most recently used popup/list (history)
            7. page turning (chevron-left, chevron-right)
            
            todo - put this popup stuff elsewhere, cleaner
            https://stackoverflow.com/questions/361209/how-to-open-a-wpf-popup-when-another-control-is-clicked-using-xaml-markup-only            
            -->
            
            <!-- left panel -->
            <DockPanel >
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                    <!-- todo - go to page 1 -->
                    <Button Style="{StaticResource BlackButtonStyle}">
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource Backward}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </Button>
                    <TextBlock Foreground="{StaticResource DimFontColor}"
                               Margin="10,30"
                               Width="70"
                               TextAlignment="Center"
                    >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Page {0}/{1}">
                                <Binding Path="PageIndex"/>
                                <Binding Path="Images.Count"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <!-- todo - make page selector -->
                    <ToggleButton x:Name="pageButton" Style="{StaticResource BlackToggleButtonStyle}"
                                  >
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource StickyNote}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </ToggleButton>

                    <Popup IsOpen="{Binding IsChecked, ElementName=pageButton}" StaysOpen="False">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Width="100" Background="White">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Page {0}/{1}">
                                            <Binding Path="PageIndex"/>
                                            <Binding Path="Images.Count"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <Slider Width="1600" Value="{Binding PageIndex}" Minimum="1" Maximum="{Binding Images.Count}"/>
                                <!--<CheckBox IsChecked="{Binding ShowMediaChecked}" Foreground="White">Show media</CheckBox>-->
                            </StackPanel>
                            <ScrollViewer DockPanel.Dock="Left" Width="1920"  Background="DarkGray">
                                <ItemsControl x:Name="PagesContainer" ItemsSource="{Binding Images}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <!-- Add this Template -->
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="ItemsControl">
                                            <ScrollViewer HorizontalScrollBarVisibility="Visible">
                                                <ItemsPresenter/>
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Image 
                            Source="{Binding .,Converter={StaticResource BitmapConverter}}"
                            HorizontalAlignment="Center"
                            Margin="20,4,0,4"
                            MaxWidth="800"
                            MaxHeight="100"
                        />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </StackPanel>
                    </Popup>


                </StackPanel>
                <StackPanel 
                        VerticalAlignment="Top" Orientation="Horizontal"
                        DockPanel.Dock="Top"
                        >
                    <Button 
                        Command="{Binding CloseCommand}"
                        Style="{StaticResource BlackButtonStyle}"
                        >
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource ChevronCircle}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </Button>
                    </StackPanel>
                <Button Command="{Binding PrevCommand}" Style="{StaticResource BlackButtonStyle}" 
                        >
                    <Canvas Width="32" Height="32">
                        <Viewbox Width="32" Height="32">
                            <Path Data="{StaticResource ChevronLeft}" Fill="{StaticResource DimFontColor}"/>
                        </Viewbox>
                    </Canvas>
                </Button>
            </DockPanel>
            
            <Image
                Grid.Column="1"
                Source="{Binding LeftView,Converter={StaticResource BitmapConverter}}"
                HorizontalAlignment="Center"
                Margin="0,4"
            />
            <Image
                Grid.Column="2"
                Source="{Binding RightView,Converter={StaticResource BitmapConverter}}"
                HorizontalAlignment="Center"
                Margin="0,4"
            />

            <!-- right panel -->
            <DockPanel Grid.Column="3">
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right">
                    <ToggleButton x:Name="historyButton" Style="{StaticResource BlackToggleButtonStyle}">
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource History}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=historyButton}" StaysOpen="False">
                        <StackPanel Background="Black">
                            <ComboBox ItemsSource="{Binding MRU}" Width="200" />
                        </StackPanel>
                    </Popup>

                    <ToggleButton x:Name="renderButton" Style="{StaticResource BlackToggleButtonStyle}">
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource PencilRuler}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=renderButton}" StaysOpen="False">
                        <StackPanel Background="Black">
                            <CheckBox FontSize="30" Foreground="white" IsChecked="{Binding Inverted}">Invert</CheckBox>
                            <CheckBox FontSize="30"  Foreground="White" IsChecked="{Binding Filtered}">Filter</CheckBox>
                            <CheckBox FontSize="30"  Foreground="White" IsChecked="{Binding Colorized}">Colorize</CheckBox>
                        </StackPanel>
                    </Popup>

                    <ToggleButton x:Name="mediaButton" Style="{StaticResource BlackToggleButtonStyle}" >
                        <Canvas Width="32" Height="32">
                            <Viewbox Width="32" Height="32">
                                <Path Data="{StaticResource FileAudio}" Fill="{StaticResource DimFontColor}"/>
                            </Viewbox>
                        </Canvas>
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=mediaButton}" StaysOpen="False">
                        <StackPanel Background="Black">
                            <ComboBox ItemsSource="{Binding MediaFilenames}" SelectedItem="{Binding SelectedMediaFilename}"/>
                        </StackPanel>
                    </Popup>


                </StackPanel>
                <views1:MediaPlayerControl 
                    DockPanel.Dock="Bottom"
                    MaxHeight="300" 
                    Filepath="{Binding SelectedMediaFilename}"
                    Visibility="{Binding ShowMediaChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                    />

                <Button Command="{Binding NextCommand}" Style="{StaticResource BlackButtonStyle}"
                        >
                    <Canvas Width="32" Height="32">
                        <Viewbox Width="32" Height="32">
                            <Path Data="{StaticResource ChevronRight}" Fill="{StaticResource DimFontColor}"/>
                        </Viewbox>
                    </Canvas>
                </Button>
            </DockPanel>
        </Grid>
    </DockPanel>
</views:MvxWpfView>